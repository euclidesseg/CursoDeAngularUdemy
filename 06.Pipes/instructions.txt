====== Pipes =======
---- Un pipe es una forma de transformar la informacion que esta en el html
---- por ejemplo si tenemos una informacion en nuestr base de datos en toda en mayuscula
---- no seria feo ponerla en mayuscula en la parte visual en nuestro componente visual
---- propiedad | pipe  : esta es la sintaxis para usar los pipes


---- Para trabajar con pipe vamos a trabajar al tiempo con la libreria 
---- PRIME NG

---- Prime Ng es un conjunto de componentes estilizados y 

---- Con Prime NG podemos usar los componentes por separado solo importando los componente que necesitemos
---- por ejemplo en un proyecto no tal vez no necesitemos el modulo de calendar o checkbox o group
---- Datos par ainstalar PrimeNG
---- npm install primeng --save
---- npm install primeicons
---- Los pipes de angular sirven para trnsformar visualmente la informacion


---- Para continuar vamos a configurar primeNg en nuestro proyecto para continuar...
-----"styles": [
        "node_modules/primeicons/primeicons.css",
        "node_modules/primeng/resources/themes/vela-blue/theme.css",
        "node_modules/primeng/resources/primeng.min.css",
        ...
-----]

---- estos archivos los agregamos a nuestros estilos de angular.json 
---- para usar las directivas de primeNg es decir las etiquetas personalizadas 
---- devemos importar dicho modulo 

==== NOTA: Para usar cualquier estilo de angular devemos importar el modulo correspondiente del paquete
---- en nuestro modulo, tambien lo podemos referenciar en los componentes

---- Ahora vamos a estilizar nuestro botton para lo cual importamos el modulo a nuestro componente
---- para agregar etiquetas personalizadas usamos los modulos de primeNG pero si queremos dar colores
---- o estilos usamos las variables de css estaplecidas en el archivo temes de los paquetes de primeicons


---- para darle mas estilos a nuestro componente tambien tomamos los estilos propios 
---- de bariable sde css 

==== Ahora nos crearemos un modulo especializado para todos los modulos que trabajan con el primeNG
---- Este modulo solo me va a servir para exportar los modulos que voy a utilizar
---- Seguido de esto se agregan las carpetas para la estructuras de la app


==== Rutas de la Aplicacion ====


==== Cambiar Rutas usando el MenuBar ====
---- En esta ocacion veremos como cambiar rutas desde el menu bariable
---- Aunque en el html no se vean las etiquetas a para navegar

---- Para eso el arreglo de items que nos pide el p.menubar 
---- los llenaremos manual mente, ahi nos damos cuanta que el tipado que viene directamente del componente
---- de prime nos pide datos principales como label: titulo, icon: icono del label,
---- y el mas importante que es el routerLink con el cual navegaremos hasta nuestro componente de eleccrion

==== LLenar Basicos Textos y Fechas Con prime Flex====
---- Para trabajar con Prime Flex Devemos hacer la instalcion de prime Flex
---- npm install primeflex --save
---- prime flex lo que hace es darnos otro tipo de clases que estan orientadas a trabajar con flex box

---- Tambien debemos importar el modulo Prime hasta nuestro modulo personalizados,
---- importamos el modulo ventas hasta el modulo appModulo para que se muestre, 
---- y en el modulo personalizado de prime lo importamos hasta el modulo personalizado

---- UpperCase LowerCase Y TitleCase ----

==== DatePipe ====
---- {{ value_expression | date [ : format [ : timezone [ : locale ] ] ] }}

==== Cambiar el idioma de los pipes ====
---- para cambiar el idioma de los pipe lo hacemos desde la raiz de la app den el app module
---- importamos el local desde @ angular/common/locales/es-CO
---- tambien importamos register localData que es una funcion
---- import {registerLocaleData} from '@angular/common';

---- registerLocaleData(local)
---- esta funcion recibe el local de nuestra app como data

---- Ahoar lo podemos usar y para usarlo lo registramos como un provedor providers en nuestro appModule

==== TimeZone y cambiar a otro idioma mandando argumento desde el pipe ======
---- vallamos a nuestro appcomponent

==== Decimal Pipe ===== 
---- Es hora de comenzar con nuestro Componente de Numeros

==== Currency pipe o monedas ==== 
---- Continuaremos con numeeros

==== PrimeNG Fieldset ====
---- en esta clase vamos a aprender un nuevo componente de primeNg 
---- para preparar na vista para los nuevos pipes
---- Como de costumbre para usar este componente vamos hasta nuestro modulo 
---- personalizado y lo agregamos luego de eso en nuestro modulo appmodule debemos agregar 
---- import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
---- para poderlo usar, generalmente cualquier componente de primeng que tenga animacion requiere de BrowserAnimationsModule
---- animationModule

==== pipe i18Selected y i18Plural ====
---- El nombre i18selectedpipe significa 
---- "internationalization selected pipe" y su función principal
---- es mostrar la traducción de un valor seleccionado en una lista desplegable.

---- este paipe lo usaremos para que en caso de que un nombre en una frace sea femenina
---- toda la frase tome el comportamiento de ir dirigida hacia una mujer o lo contrario 
---- si es hombre valla dirigidaa hombre

---- para determinar si es hombre o mujer debemos tener una vandera que me ayude a determinar
---- si es hombre o mujer

---- este pipe siempre recibe un objeto como argumento para poder funcionar en el componente 
---- se ven los ejemplos

==== pipe slice ==== 
---- este pipe usualmente se utiliza para cortar elelementos de un arreglo o de strings
---- pfara ver su funcionamiento en el componente de no-comunes se observa

==== KeyValue Pipe ====
---- este pipe se usa cuando se necesita mostrar un objeto literal en el html
---- es decir, para usar ngFor es necesario un objeto iterable(arreglo)
---- con este pipe podemos usar un ngFor con un objeto


==== Json Pipe ====
---- el pipe json nos sera util para depurar un objeto y saver sus llaves y valores
---- su limitacion es que si trae funciones y esas funciones imprimen valores
---- no nos va a funcionar

==== Asunc Pipe ====
---- El async pipe es una directiva de Angular que se utiliza para manejar la respuesta
---- asincrónica de una solicitud HTTP
---- es decir, para poder usar este pipe lo devemos hacer con un observable o una promesa

============ Pipes Personalizados =============
---- Para trabajar con pipes personalizados vamos a crear un nuevo componente en nuestra Aplicacion
---- para tener nuestros pipes personalizados
---- para eso dicha pagina la asociamos al segundo elemento de nuestro navbar 


==== togleCasePage ==== 
---- Ahora vamos a crear nuestros primer pipe de angular y lo haremos en la carpeta pipes
---- para que el pipe funcione debe estar declarado en el un modulo cercano por ende lo vamos a declarar en
---- products module

==== Enviar argumentos Al Pipe =====