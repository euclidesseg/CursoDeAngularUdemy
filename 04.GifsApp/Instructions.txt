======= GifsApp ========
---- En esta ocacion trabajaremos con una aplicacion mas dinamica consumiendo una api 
---- para mostrar gifs la cual es muy usada por redes como whatsap facebook entre otros

---- Creamos un nuevo modulo llamado shared al nivel de la aplicacion 
     ---- este modulo tendra todas las vistas que se van a compartir 
     ---- a los demas componentes de la app como lo es menus navbar foter o en este caso 
     ---- sidebar

---- Creamos un nuevo componente llamado sidebar dentro de shared 
---- exportamos el sidebarComponent en el modulo que creamos 
---- importamos el shared.module dentro de app.module
---- poner el sidebar dentro del app.component.html para que se vea en la pantalla

---- Ahora crearemos un modulo para manejar toda la logica de gift
---- creamos un gifs-page que agrupara todos los demas subcomponentes

---- A continuacion crearemos dos componentes uno que se encargue de hacer la busqueda y otro que 
---- se encargara de mostrar los resultados en el gifs-Page

========= @ViewChild Para obtener referencias a objetos del HTML=================
---- el decorador "@ViewChild" se utiliza en Angular principalmente para acceder a 
---- elementos HTML  desde un componente.
---- los podemos usar con directivavs clases o nombres de cajas de texto

=========== GifsService =============
---- Ahora crearemos un servicio centralizado para almacenas todo lo relacionado a los gifs
---- lo primero que vamos a almacenar es cada una de las razones de busqueda que el usuario haga
---- creamos el servicio para guardar termino de busqueda, el componente de busqueda solo va a guardar lo que se busque
---- y el de obtener los terminos de busqueda
---- este ultimo seran los que se muestran en nuestro sidebar
---- En el componente de search se validan que no se agregen campos vacios 
---- y en el servicio se valida que no se agreuen mas de 10 elementos al arreglo


============ Creando ApKey y probando el endpoint de Giphy===========
---- Giphy es la pagina a la que haremos la peticion para traer las imagenes que coincidan 
---- con los terminos de busqueda que ya configuramos para eso nos logueamos en la pagina 
---- https://giphy.com/reactions

==== En la pagina =======
---- Vamos a developers y a  dashboards creamos uno nuevo y elegimos con API
---- nos traeos el apykey y lo guardamos en un archivo de recursos y posterior mente 
---- lo traemos en nuestro servicio

---- vamos a la pagina de giphy y buscamos el enpoint para buscar 
---- cuando vamos a obtener la url de la busqued nos informa que devemos enviar entre los parametros 
---- nuestro apyKey junto con otros parametros, antes probamos nuestra url con pstman
---- el query de busqueda tambien se debe especificar para que nos retorne 
---- lo devemos hacer sin espacios

============ Haciendo una peticion a Giphy===========
---- para hacer el llamado o hacer la peticion tomamos toda la ruta que probamos en el postman 
---- y la agregamos como perametros en la funcion fetch esto lo hacermos en el cervicio
---- dentro de nuestra funcion de buscarGifs

---- para hacer las peticiones angular usa un objeto para eso y para ello debemos importar un modulo 
---- llamado httpClientModule en nuestro 
---- app.module.ts para que sea global 
---- este modulo ofrese un servicio que puedo inyectar en el servicio de mi app
---- el http trabaja con observable que es mas poderoso que las promesas

======== Mostrando los resultados del enpint en el componente list ========
---- En nustro servicio creamos un arreglo que alamcene los resultados de la busqueda
---- en nuestro componente de lista insertamos el servicio
---- y mediante ese servicio nos traemos los datos de la respuesta que son arreglor 
---- en el componente recorremos ese arreglo y pintamos las imagenes que vienen en los objetos
---- del arreglo

===== Colocando tipado a las peticiones ======
---- Las respuesta de las peticiones estan de tipo any debemos ponerles un tipado 
---- para saber si se ocurre un error y para eso nos copiamos toda la respuesta desde 
---- el pstman y entramos a quicktype.io para pasar el json de la respuesta a una interfaz
---- seguido agregamos la interfaz que nos retorna hasta nuestra app

---- Indicamos que la respuesta get sera de tipo de la interfaz que acabamos de traer
---- ahora la respuesta luce como la interfaz que agregamos de tipo <SearchGifsResponse>
---- la data que es la que viene con la respuesta sera de tipo <Gif>
---- debido a que todo eso son arreglos y objetos ya sabemos manejar mejor los metodos.
---- la idea de todo esto es para que TS sepa que existen todas estas propiedades y que se pueden 
---- Manipular.